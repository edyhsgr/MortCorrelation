H = L+10
keep.df = state.df %>%
filter( PopName %in% c('CT','AL','MO','MS','FL'),
Age %in% c(L,H)) %>%
group_by(PopName, Year) %>%
summarize( p1 = lx[Age==H[1] ] / lx[Age==L[1] ],
p2 = lx[Age==H[2] ] / lx[Age==L[2] ],
p3 = lx[Age==H[3] ] / lx[Age==L[3] ],
p4 = lx[Age==H[4] ] / lx[Age==L[4] ],
p5 = lx[Age==H[5] ] / lx[Age==L[5] ]) %>%
gather(key='var', value='prob', -PopName, -Year) %>%
mutate( var = factor(var,
levels=paste0('p',1:5),
labels=paste0('Survival from\n',
L,'-',H)))
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(0,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
#ggsave(file='JPN vs USA age-specific survival time series.png',
#       width=13, height=6)
keep.df = state.df %>%
filter( PopName %in% c('NY','FL'),
Age %in% c(L,H)) %>%
group_by(PopName, Year) %>%
summarize( p1 = lx[Age==H[1] ] / lx[Age==L[1] ],
p2 = lx[Age==H[2] ] / lx[Age==L[2] ],
p3 = lx[Age==H[3] ] / lx[Age==L[3] ],
p4 = lx[Age==H[4] ] / lx[Age==L[4] ],
p5 = lx[Age==H[5] ] / lx[Age==L[5] ]) %>%
gather(key='var', value='prob', -PopName, -Year) %>%
mutate( var = factor(var,
levels=paste0('p',1:5),
labels=paste0('Survival from\n',
L,'-',H)))
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(0,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
#ggsave(file='JPN vs USA age-specific survival time series.png',
#       width=13, height=6)
L = seq(45,85,10)
H = L+10
keep.df = state.df %>%
filter( PopName %in% c('NY','FL'),
Age %in% c(L,H)) %>%
group_by(PopName, Year) %>%
summarize( p1 = lx[Age==H[1] ] / lx[Age==L[1] ],
p2 = lx[Age==H[2] ] / lx[Age==L[2] ],
p3 = lx[Age==H[3] ] / lx[Age==L[3] ],
p4 = lx[Age==H[4] ] / lx[Age==L[4] ],
p5 = lx[Age==H[5] ] / lx[Age==L[5] ]) %>%
gather(key='var', value='prob', -PopName, -Year) %>%
mutate( var = factor(var,
levels=paste0('p',1:5),
labels=paste0('Survival from\n',
L,'-',H)))
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(0,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
#ggsave(file='JPN vs USA age-specific survival time series.png',
#       width=13, height=6)
keep.df = state.df %>%
filter( PopName %in% c('NY','FL','OH','IL'),
Age %in% c(L,H)) %>%
group_by(PopName, Year) %>%
summarize( p1 = lx[Age==H[1] ] / lx[Age==L[1] ],
p2 = lx[Age==H[2] ] / lx[Age==L[2] ],
p3 = lx[Age==H[3] ] / lx[Age==L[3] ],
p4 = lx[Age==H[4] ] / lx[Age==L[4] ],
p5 = lx[Age==H[5] ] / lx[Age==L[5] ]) %>%
gather(key='var', value='prob', -PopName, -Year) %>%
mutate( var = factor(var,
levels=paste0('p',1:5),
labels=paste0('Survival from\n',
L,'-',H)))
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(0,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
#ggsave(file='JPN vs USA age-specific survival time series.png',
#       width=13, height=6)
L = seq(55,75,5)
H = L+5
keep.df = state.df %>%
filter( PopName %in% c('NY','FL','OH','IL'),
Age %in% c(L,H)) %>%
group_by(PopName, Year) %>%
summarize( p1 = lx[Age==H[1] ] / lx[Age==L[1] ],
p2 = lx[Age==H[2] ] / lx[Age==L[2] ],
p3 = lx[Age==H[3] ] / lx[Age==L[3] ],
p4 = lx[Age==H[4] ] / lx[Age==L[4] ],
p5 = lx[Age==H[5] ] / lx[Age==L[5] ]) %>%
gather(key='var', value='prob', -PopName, -Year) %>%
mutate( var = factor(var,
levels=paste0('p',1:5),
labels=paste0('Survival from\n',
L,'-',H)))
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(0,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
#ggsave(file='JPN vs USA age-specific survival time series.png',
#       width=13, height=6)
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(.50,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(.60,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60, edof=8) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(.60,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60, span=.20) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(.60,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60, span=.40) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(.60,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.60, span=.50) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(.60,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
ggplot( data=keep.df, aes(x=Year, y=prob, group=PopName, color=PopName)) +
geom_point(size=0.6) +
geom_smooth(se=FALSE, lwd=1, alpha=.80) +
geom_hline( yintercept = 0) +
scale_y_continuous(limits=c(.60,1)) +
facet_grid(~var) +
theme_bw() +
labs(title='Probability of Survival over age intervals\nUS Males 1959-2015',
y="Probability of Survival (Males)",
color='State',
caption='Source: US Mortality Database      http://usa.mortality.org')
setwd("~/GitHub/USA-mortality")
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
library(viridis)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
included_states = c('CA')
file_list = paste0('States/',included_states,'/',
included_states,'_bltper_1x1.csv')
file_list
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
library(viridis)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
this_file = "States/CA/CA_bltper_1x1.csv"
unzip(zipfile='lifetables.zip', files=file_list, junkpaths=TRUE)
this.df = read.csv(this.file, stringsAsFactors = FALSE)
this.df$Age = 0:110 # make numeric
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
library(viridis)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
this_file = "States/CA/CA_bltper_1x1.csv"
unzip(zipfile='lifetables.zip', files=this_file, junkpaths=TRUE)
this.df = read.csv(this.file, stringsAsFactors = FALSE)
this.df$Age = 0:110 # make numeric
file.remove(this_file)
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
library(viridis)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
this_file = "States/CA/CA_bltper_1x1.csv"
unzip(zipfile='lifetables.zip', files=this_file, junkpaths=TRUE)
dir()
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
library(viridis)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
file_name = 'CA_bltper_1x1.csv'
file_path = 'States/CA/CA_bltper_1x1.csv'
unzip(zipfile='lifetables.zip', files=file_path, junkpaths=TRUE)
this.df = read.csv(file_name, stringsAsFactors = FALSE)
this.df$Age = 0:110 # make numeric
file.remove(this_file)
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
library(viridis)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
file_name = 'CA_bltper_1x1.csv'
file_path = 'States/CA/CA_bltper_1x1.csv'
unzip(zipfile='lifetables.zip', files=file_path, junkpaths=TRUE)
this.df = read.csv(file_name, stringsAsFactors = FALSE)
this.df$Age = 0:110 # make numeric
file.remove(file_name)
this.df
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
library(viridis)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
file_name = 'CA_fltper_1x1.csv'
file_path = 'States/CA/CA_fltper_1x1.csv'
unzip(zipfile='lifetables.zip', files=file_path, junkpaths=TRUE)
this.df = read.csv(file_name, stringsAsFactors = FALSE)
this.df$Age = 0:110 # make numeric
file.remove(file_name)
head(this.df)
max(this.df$Year)
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
library(viridis)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
## California females 2015
file_name = 'CA_fltper_1x1.csv'
file_path = 'States/CA/CA_fltper_1x1.csv'
unzip(zipfile='lifetables.zip', files=file_path, junkpaths=TRUE)
this.df = read.csv(file_name, stringsAsFactors = FALSE) %>%
filter(Year == 2015) %>%
mutate(Age = 0:110) # make numeric
file.remove(file_name)
this.df
dim(this.df)
names(df)
names(this.df)
rename('this.df','df')
df = this.df
with(df, ifelse(x<55,NA,lx/lx[56] )
)
with(df, ifelse(0:110<55,NA,lx/lx[56] )
)
names(df)
x=45
tmp = df %>%
mutate(lxstar = ifelse(Age < x, NA, lx/lx[Age==x]))
tmp
View(tmp)
head(df)
df = read.csv(file_name, stringsAsFactors = FALSE) %>%
filter(Year == 2015) %>%
mutate(Age = 0:110,
lx = lx/lx[Age==0]) %>%
select(PopName:Age, lx, ex)
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 29 Sep 18
#
# visualize remaining life expectancy
#---------------------------------------------
rm(list=ls())
library(tidyverse)
graphics.off()
if (.Platform$OS.type == 'windows') windows(record=TRUE, width=8, height=8)
## California females 2015
file_name = 'CA_fltper_1x1.csv'
file_path = 'States/CA/CA_fltper_1x1.csv'
unzip(zipfile='lifetables.zip', files=file_path, junkpaths=TRUE)
df = read.csv(file_name, stringsAsFactors = FALSE) %>%
filter(Year == 2015) %>%
mutate(Age = 0:110,
lx = lx/lx[Age==0]) %>%
select(PopName:Age, lx, ex)
df
x
x=45
tmp = df %>%
mutate(lxstar = ifelse(Age < x, NA, lx/lx[Age==x]))
tmp
tmp
gather(tmp, key=Age,)
gather(tmp, key=Age)
View( gather(tmp, key=Age))
View( gather(tmp,key=Age, -PopName,-Year))
View( gather(tmp,key=Age, -PopName,-Year,-Sex, value=lx))
head(tmp)
head(tmp)
tail(tmp)
dim(tmp)
select(tmp, PopName:Age,ex,lx)
rbind( select(tmp, PopName:Age,ex,lx), select(tmp, PopName:Age,ex,lx=lxstar))
names(df)
tmp = rbind(
mutate(df, xstart=0),
mutate(lx = ifelse(Age < x, NA, lx/lx[Age==x]), xstart=x)
)
names(df)
tmp = rbind(
mutate(df, xstart=0),
mutate(df, lx = ifelse(Age < x, NA, lx/lx[Age==x]), xstart=x)
)
dim(tmp)
tmp
View(tmp)
G = ggplot( data=tmp, aes(x=Age, y=lx, color=xstart)) +
geom_line()
G
tmp = rbind(
mutate(df, xstart=0),
mutate(df, lx = ifelse(Age < x, NA, lx/lx[Age==x]), xstart=x)
) %>%
mutate(xstart=as.factor(xstart))
G = ggplot( data=tmp, aes(x=Age, y=lx, color=xstart)) +
geom_line()
G
G = ggplot( data=tmp, aes(x=Age, y=lx, color=xstart)) +
geom_line() +
theme_bw()
G
G = ggplot( data=tmp, aes(x=Age, y=lx, color=xstart)) +
geom_line(lwd=3) +
theme_bw()
G
G = ggplot( data=tmp, aes(x=Age, y=lx, color=xstart, alpha=xstart)) +
geom_line(lwd=3) +
theme_bw()
G
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=2, color='red') +
theme_bw()
G
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=2, color='red') +
geom_hline(yintercept = 0) +
theme_bw()
G
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=1, color='red') +
geom_hline(yintercept = 0) +
theme_bw()
G
tmp = df %>%
mutate(lx = ifelse(Age < x, NA, lx/lx[Age==x]))
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=1, color='red') +
geom_hline(yintercept = 0) +
theme_bw()
G + geom_polygon(data=tmp, color='pink', alpha=.70)
G
tmp
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=1, color='red') +
geom_hline(yintercept = 0) +
theme_bw()
G + geom_polygon(data=tmp, fill='pink', alpha=.70)
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=1, color='red') +
geom_hline(yintercept = 0) +
theme_bw()
G + geom_path(data=tmp, fill='pink', alpha=.70)
G
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=1, color='red') +
geom_hline(yintercept = 0) +
theme_bw()
G + geom_polygon(data=tmp, fill='pink', alpha=.70)
tmp = df %>%
mutate(lx = ifelse(Age < x, NA, lx/lx[Age==x]))
tmp = rbind(tmp,tmp[1,])
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=1, color='red') +
geom_hline(yintercept = 0) +
theme_bw()
G + geom_polygon(data=tmp, fill='pink', alpha=.70)
G
tmp
tmp = df %>%
mutate(lx = ifelse(Age < x, NA, lx/lx[Age==x]))
tmp = rbind(tmp,tmp[ tmp$Age==x,])
G = ggplot( data=df, aes(x=Age, y=lx)) +
geom_line(lwd=1, color='red') +
geom_hline(yintercept = 0) +
theme_bw()
G + geom_polygon(data=tmp, fill='pink', alpha=.70)
